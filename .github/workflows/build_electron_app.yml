name: Build and Package Electron App

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN}}

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  version-bump:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensure all tags are fetched
      - name: Bump version and push tag
        uses: phips28/gh-action-bump-version@master      
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          tag-prefix: ''
          minor: true # Change this to 'true' for minor, 'false' for patch updates

  build-and-release:
    needs: version-bump
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm-dev libxcomposite-dev libxdamage-dev libxrandr-dev libgbm-dev libxss-dev libasound2-dev
          
      - name: Install Node.js dependencies
        run: npm install
        
      - name: Build and Package
        run: npm run dist --publish=never
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: installer-${{ matrix.os }}
          path: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.zip
          retention-days: 30
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.zip
          tag_name: ${{ github.ref_name }}
          token: ${{ secrets.GH_TOKEN }}
